[{"/Users/raj/Desktop/TransactEstate/client/src/index.js":"1","/Users/raj/Desktop/TransactEstate/client/src/reportWebVitals.js":"2","/Users/raj/Desktop/TransactEstate/client/src/components/App.js":"3","/Users/raj/Desktop/TransactEstate/client/src/reducers/index.js":"4","/Users/raj/Desktop/TransactEstate/client/src/components/Header.js":"5","/Users/raj/Desktop/TransactEstate/client/src/components/Login.js":"6","/Users/raj/Desktop/TransactEstate/client/src/components/NewDashboard.js":"7","/Users/raj/Desktop/TransactEstate/client/src/reducers/authReducer.js":"8","/Users/raj/Desktop/TransactEstate/client/src/reducers/deviceReducer.js":"9","/Users/raj/Desktop/TransactEstate/client/src/actions/index.js":"10","/Users/raj/Desktop/TransactEstate/client/src/components/Aboutus.js":"11","/Users/raj/Desktop/TransactEstate/client/src/components/Homepage.js":"12","/Users/raj/Desktop/TransactEstate/client/src/components/styles.js":"13","/Users/raj/Desktop/TransactEstate/client/src/components/TableInfo.js":"14","/Users/raj/Desktop/TransactEstate/client/src/actions/types.js":"15","/Users/raj/Desktop/TransactEstate/client/src/components/DeviceInfo.js":"16","/Users/raj/Desktop/TransactEstate/client/src/store.js":"17","/Users/raj/Desktop/TransactEstate/client/src/components/ClickableTable.js":"18","/Users/raj/Desktop/TransactEstate/client/src/components/Summary.js":"19"},{"size":1148,"mtime":1616357458850,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1615178474874,"results":"22","hashOfConfig":"21"},{"size":983,"mtime":1616362064256,"results":"23","hashOfConfig":"21"},{"size":216,"mtime":1614834756334,"results":"24","hashOfConfig":"21"},{"size":922,"mtime":1616360661337,"results":"25","hashOfConfig":"21"},{"size":4213,"mtime":1614834745928,"results":"26","hashOfConfig":"21"},{"size":4246,"mtime":1615174812533,"results":"27","hashOfConfig":"21"},{"size":324,"mtime":1616360389120,"results":"28","hashOfConfig":"21"},{"size":319,"mtime":1616361628596,"results":"29","hashOfConfig":"21"},{"size":657,"mtime":1616360091014,"results":"30","hashOfConfig":"21"},{"size":760,"mtime":1614834745927,"results":"31","hashOfConfig":"21"},{"size":841,"mtime":1614834745928,"results":"32","hashOfConfig":"21"},{"size":2188,"mtime":1614834745927,"results":"33","hashOfConfig":"21"},{"size":6082,"mtime":1614834745928,"results":"34","hashOfConfig":"21"},{"size":83,"mtime":1614834730070,"results":"35","hashOfConfig":"21"},{"size":1608,"mtime":1616362014980,"results":"36","hashOfConfig":"21"},{"size":374,"mtime":1615761106227,"results":"37","hashOfConfig":"21"},{"size":4021,"mtime":1616357006525,"results":"38","hashOfConfig":"21"},{"size":951,"mtime":1616357045894,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1u2yabp",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/raj/Desktop/TransactEstate/client/src/index.js",["84","85"],"import 'materialize-css/dist/css/materialize.min.css';\nimport 'react-bootstrap/dist/react-bootstrap.min.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport reducers from './reducers';\nimport reduxThunk from 'redux-thunk';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\n\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["86","87"],"/Users/raj/Desktop/TransactEstate/client/src/reportWebVitals.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/App.js",["88","89"],"/Users/raj/Desktop/TransactEstate/client/src/reducers/index.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Header.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Login.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/NewDashboard.js",["90","91"],"import React, { useEffect } from 'react';\nimport clsx from 'clsx';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport useStyles from './styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport { connect } from 'react-redux';\nimport Aboutus from './Aboutus';\nimport Homepage from './Homepage';\nimport TableInfo from './TableInfo';\n\nimport Box from '@material-ui/core/Box';\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [tabs, setTabs] = React.useState('home');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const loadTabs = () => {\n\n    switch (tabs) {\n      case 'home':\n        return <Homepage />\n      case 'aboutus':\n        return <TableInfo {...props} />\n      default:\n        break;\n    }\n  }\n\n  const renderContent = () => {\n\n    switch (props.auth) {\n      case null:\n        return <a href=\"/api/auth\">Login with Azure</a>;\n      default:\n        return <a href=\"/#\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\n    }\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          {renderContent()}\n          <Box paddingLeft={5}><a href=\"/api/auth/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\n        </Toolbar>\n\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <div>\n            <ListItem button onClick={e => setTabs(\"home\")} >\n              <ListItemIcon className={classes.icon}>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText disableTypography primary={<Typography style={{ color: '#000000' }}>Dashboard</Typography>} />\n            </ListItem>\n            <ListItem button onClick={e => setTabs(\"aboutus\")}>\n              <ListItemIcon className={classes.icon}>\n                <InfoIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"About Us\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon className={classes.icon}>\n                <ContactPhoneIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact Us\" />\n            </ListItem>\n          </div>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {loadTabs()}\n      </main>\n    </div>\n  );\n}\nfunction mapStateToProps(state) {\n  return { auth: state.auth };\n}\nexport default connect(mapStateToProps)(Dashboard);","/Users/raj/Desktop/TransactEstate/client/src/reducers/authReducer.js",["92"],"import { FETCH_USER } from '../actions/types';\n\n\nexport default function (state = null, action) {\n    console.log(action);\n    switch (action.type) {\n        //if the action is fetch_user send the payload\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","/Users/raj/Desktop/TransactEstate/client/src/reducers/deviceReducer.js",["93"],"/Users/raj/Desktop/TransactEstate/client/src/actions/index.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Aboutus.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Homepage.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/styles.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/TableInfo.js",["94","95","96","97","98"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchOnine} from '../actions';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { useDispatch } from 'react-redux';\n\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nconst propsT = null;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function CustomPaginationActionsTable(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\n    return {devId:deviceinfo.device_id,\n      instId:deviceinfo.institution_id,\n      cat:deviceinfo.category,\n      typeDev:deviceinfo.type,\n      status:deviceinfo.status  }\n  }):[{devId:\"Loading\",\n    instId:\"Loading\",\n    cat:\"Loading\",\n    typeDev:\"Loading\"}];\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\n      <TableHead>\n          <TableRow>\n            <TableCell align='left'>Device Id</TableCell>\n            <TableCell align='left'>Institution Id</TableCell>\n            <TableCell align='left'>Category</TableCell>\n            <TableCell align='left'>Device Type</TableCell>\n            <TableCell align='left'>Status</TableCell>\n          </TableRow>\n      </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.devId}>\n              <TableCell style={{ width: 160}} align =\"left\">\n                {row.devId}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.instId}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.cat}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.typeDev}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.status}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}","/Users/raj/Desktop/TransactEstate/client/src/actions/types.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/DeviceInfo.js",["99"],"/Users/raj/Desktop/TransactEstate/client/src/store.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/ClickableTable.js",["100","101","102","103"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Modal, Button, Tab } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport Tabs from 'react-bootstrap/Tabs';\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport './ClickableTable.css';\nimport { fetchDevice } from '../actions';\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nimport Summary from './Summary';\n\n\nfunction ClickableTable(props) {\n\n  const [deviceinfo, setDeviceinfo] = useState([]);\n\n  const [modalInfo, setModalInfo] = useState([]);\n  const [showModal, setShowModal] = useState([false]);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  useEffect(() => {\n    // logic for bringing in data object\n    setDeviceinfo(props.deviceInfo)\n  })\n\n  const columns = [\n    {\n      dataField: 'device_id',\n      text: 'Device ID',\n      headerStyle: { textAlign: 'center' }\n    },\n    {\n      dataField: 'university_id',\n      text: 'University ID',\n      headerStyle: { textAlign: 'center' }\n    },\n    {\n      dataField: 'category',\n      text: 'Category',\n      headerStyle: { textAlign: 'center' }\n    },\n    {\n      dataField: 'type',\n      text: 'Type',\n      headerStyle: { textAlign: 'center' }\n    }\n  ];\n\n  const datas = deviceinfo.map(infos => (\n    {\n      device_id: infos.device_id,\n      university_id: infos.institution_id,\n      category: infos.category,\n      type: infos.type,\n      error: infos.errorText,\n      model: infos.model,\n      app_Version: infos.applicationVersion,\n      firware_Version: infos.firmwareVersion,\n      license_expiry: infos.licenseExpiry,\n      license_key: infos.licenseKey,\n      manufacturer: infos.manufacturer,\n      serial_number: infos.serialNumber,\n      status: infos.status,\n      status_date_time: infos.statusDateTime,\n      id: infos._id\n\n    }\n  ));\n\n\n\n\n  const rowEvents = {\n    onClick: (e, row) => {\n      //console.log(row)\n      setModalInfo(row)\n      toggleTrueFalse()\n    },\n  };\n\n  const toggleTrueFalse = () => {\n    setShowModal(handleShow);\n  };\n  const ModalContent = () => {\n    return (\n      <Modal {...props}\n        className=\"custom-modal\"\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={show} onHide={handleClose} backdrop=\"static\"\n        keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title\n            centered > {modalInfo.device_id}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Tabs fill variant=\"tabs\" className=\"summaryTab\" defaultActiveKey=\"summary\" headerStyle={{ fontWeight: 'bold' }} activeHeaderStyle={{ color: 'white' }} id=\"uncontrolled-tab-example\"  >\n            <Tab eventKey=\"summary\" title=\"Summary\">\n\n              <Summary {...modalInfo} />\n            </Tab>\n            <Tab eventKey=\"error\" title=\"Error encountered\">\n              <ListGroup>\n                <ListGroup.Item>Error1 </ListGroup.Item>\n                <ListGroup.Item> Error2 </ListGroup.Item>\n              </ListGroup>\n              {/* <Errors /> */}\n            </Tab>\n            <Tab eventKey=\"history\" title=\"History\">\n              <ListGroup>\n                <ListGroup.Item>History1 </ListGroup.Item>\n                <ListGroup.Item> History2 </ListGroup.Item>\n              </ListGroup>\n              {/* <History /> */}\n            </Tab>\n          </Tabs>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n        </Modal.Footer>\n\n      </Modal>\n    );\n\n  };\n\n\n\n\n  return (\n    console.log(props),\n    <div className=\"App\">\n      <BootstrapTable\n        striped bordered hover size=\"sm\" ali\n        keyField=\"id\"\n        data={datas}\n        columns={columns}\n        rowEvents={rowEvents}\n        pagination={paginationFactory()}\n      />\n      {show ? <ModalContent /> : null}\n    </div>\n  );\n\n}\nexport default ClickableTable;\n","/Users/raj/Desktop/TransactEstate/client/src/components/Summary.js",[],{"ruleId":"104","severity":1,"message":"105","line":15,"column":8,"nodeType":"106","messageId":"107","endLine":15,"endColumn":9},{"ruleId":"104","severity":1,"message":"108","line":16,"column":8,"nodeType":"106","messageId":"107","endLine":16,"endColumn":14},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"104","severity":1,"message":"113","line":11,"column":10,"nodeType":"106","messageId":"107","endLine":11,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":12,"column":8,"nodeType":"106","messageId":"107","endLine":12,"endColumn":13},{"ruleId":"104","severity":1,"message":"115","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":26},{"ruleId":"104","severity":1,"message":"116","line":23,"column":8,"nodeType":"106","messageId":"107","endLine":23,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":4,"column":1,"nodeType":"119","endLine":13,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":4,"column":1,"nodeType":"119","endLine":13,"endColumn":2},{"ruleId":"104","severity":1,"message":"120","line":1,"column":16,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"121","line":2,"column":9,"nodeType":"106","messageId":"107","endLine":2,"endColumn":16},{"ruleId":"104","severity":1,"message":"122","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"123","line":20,"column":10,"nodeType":"106","messageId":"107","endLine":20,"endColumn":21},{"ruleId":"104","severity":1,"message":"124","line":29,"column":7,"nodeType":"106","messageId":"107","endLine":29,"endColumn":13},{"ruleId":"104","severity":1,"message":"125","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":17},{"ruleId":"104","severity":1,"message":"126","line":2,"column":8,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"127","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":21},{"ruleId":"104","severity":1,"message":"128","line":19,"column":10,"nodeType":"106","messageId":"107","endLine":19,"endColumn":19},{"ruleId":"129","severity":1,"message":"130","line":26,"column":3,"nodeType":"106","endLine":26,"endColumn":12,"suggestions":"131"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"'Provider' is defined but never used.","'store' is defined but never used.","'useEffect' is defined but never used.","'Aboutus' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'connect' is defined but never used.","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.","'TableInfo' is defined but never used.","'axios' is defined but never used.","'fetchDevice' is defined but never used.","'showModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setDeviceinfo'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.deviceInfo] as a second argument to the useEffect Hook.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Add dependencies array: [props.deviceInfo]",{"range":"137","text":"138"},[880,880],", [props.deviceInfo]"]