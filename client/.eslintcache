[{"/Users/raj/Desktop/TransactEstate/client/src/index.js":"1","/Users/raj/Desktop/TransactEstate/client/src/reportWebVitals.js":"2","/Users/raj/Desktop/TransactEstate/client/src/components/App.js":"3","/Users/raj/Desktop/TransactEstate/client/src/reducers/index.js":"4","/Users/raj/Desktop/TransactEstate/client/src/components/Header.js":"5","/Users/raj/Desktop/TransactEstate/client/src/components/Login.js":"6","/Users/raj/Desktop/TransactEstate/client/src/components/NewDashboard.js":"7","/Users/raj/Desktop/TransactEstate/client/src/reducers/authReducer.js":"8","/Users/raj/Desktop/TransactEstate/client/src/reducers/deviceReducer.js":"9","/Users/raj/Desktop/TransactEstate/client/src/actions/index.js":"10","/Users/raj/Desktop/TransactEstate/client/src/components/Aboutus.js":"11","/Users/raj/Desktop/TransactEstate/client/src/components/Homepage.js":"12","/Users/raj/Desktop/TransactEstate/client/src/components/styles.js":"13","/Users/raj/Desktop/TransactEstate/client/src/components/TableInfo.js":"14","/Users/raj/Desktop/TransactEstate/client/src/actions/types.js":"15","/Users/raj/Desktop/TransactEstate/client/src/components/DeviceInfo.js":"16"},{"size":836,"mtime":1614835404071,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1615178474874,"results":"19","hashOfConfig":"18"},{"size":843,"mtime":1614834745928,"results":"20","hashOfConfig":"18"},{"size":216,"mtime":1614834756334,"results":"21","hashOfConfig":"18"},{"size":922,"mtime":1615175014986,"results":"22","hashOfConfig":"18"},{"size":4213,"mtime":1614834745928,"results":"23","hashOfConfig":"18"},{"size":4246,"mtime":1615174812533,"results":"24","hashOfConfig":"18"},{"size":326,"mtime":1615177992647,"results":"25","hashOfConfig":"18"},{"size":295,"mtime":1615177366588,"results":"26","hashOfConfig":"18"},{"size":652,"mtime":1615179966911,"results":"27","hashOfConfig":"18"},{"size":760,"mtime":1614834745927,"results":"28","hashOfConfig":"18"},{"size":841,"mtime":1614834745928,"results":"29","hashOfConfig":"18"},{"size":2188,"mtime":1614834745927,"results":"30","hashOfConfig":"18"},{"size":6082,"mtime":1614834745928,"results":"31","hashOfConfig":"18"},{"size":83,"mtime":1614834730070,"results":"32","hashOfConfig":"18"},{"size":1584,"mtime":1614834745928,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1u2yabp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/raj/Desktop/TransactEstate/client/src/index.js",[],["72","73"],"/Users/raj/Desktop/TransactEstate/client/src/reportWebVitals.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/App.js",[],"/Users/raj/Desktop/TransactEstate/client/src/reducers/index.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Header.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Login.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/NewDashboard.js",["74","75"],"import React, { useEffect } from 'react';\nimport clsx from 'clsx';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport useStyles from './styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport { connect } from 'react-redux';\nimport Aboutus from './Aboutus';\nimport Homepage from './Homepage';\nimport TableInfo from './TableInfo';\n\nimport Box from '@material-ui/core/Box';\n\nfunction Dashboard(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const [tabs, setTabs] = React.useState('home');\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const loadTabs = () => {\n\n    switch (tabs) {\n      case 'home':\n        return <Homepage />\n      case 'aboutus':\n        return <TableInfo {...props} />\n      default:\n        break;\n    }\n  }\n\n  const renderContent = () => {\n\n    switch (props.auth) {\n      case null:\n        return <a href=\"/api/auth\">Login with Azure</a>;\n      default:\n        return <a href=\"/#\"><span className=\"white-text text-darken-2\">Admin: {props.auth.given_name} </span></a>\n    }\n  }\n\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Dashboard\n          </Typography>\n          {renderContent()}\n          <Box paddingLeft={5}><a href=\"/api/auth/logout\"><span className=\"white-text text-darken-2\">Logout</span></a></Box>\n        </Toolbar>\n\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <div>\n            <ListItem button onClick={e => setTabs(\"home\")} >\n              <ListItemIcon className={classes.icon}>\n                <DashboardIcon />\n              </ListItemIcon>\n              <ListItemText disableTypography primary={<Typography style={{ color: '#000000' }}>Dashboard</Typography>} />\n            </ListItem>\n            <ListItem button onClick={e => setTabs(\"aboutus\")}>\n              <ListItemIcon className={classes.icon}>\n                <InfoIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"About Us\" />\n            </ListItem>\n            <ListItem button>\n              <ListItemIcon className={classes.icon}>\n                <ContactPhoneIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Contact Us\" />\n            </ListItem>\n          </div>\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        {loadTabs()}\n      </main>\n    </div>\n  );\n}\nfunction mapStateToProps(state) {\n  return { auth: state.auth };\n}\nexport default connect(mapStateToProps)(Dashboard);","/Users/raj/Desktop/TransactEstate/client/src/reducers/authReducer.js",["76"],"import { FETCH_USER } from '../actions/types';\n\n\nexport default function (state = null, action) {\n    //console.log(action);\n    switch (action.type) {\n        //if the action is fetch_user send the payload\n        case FETCH_USER:\n            return action.payload || false;\n        default:\n            return state;\n    }\n}","/Users/raj/Desktop/TransactEstate/client/src/reducers/deviceReducer.js",["77"],"import { FETCH_DEVICE } from '../actions/types';\n\n\nexport default function (state = [], action) {\n\n    switch (action.type) {\n        //if the action is fetch_device send the payload\n        case FETCH_DEVICE:\n            return action.payload;\n        default:\n            return state;\n    }\n}","/Users/raj/Desktop/TransactEstate/client/src/actions/index.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Aboutus.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/Homepage.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/styles.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/TableInfo.js",["78","79","80","81","82"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {fetchOnine} from '../actions';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport { useDispatch } from 'react-redux';\n\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nconst propsT = null;\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 500,\n  },\n});\n\nexport default function CustomPaginationActionsTable(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const rows = props.deviceInfo?props.deviceInfo.map(deviceinfo=>{\n    return {devId:deviceinfo.device_id,\n      instId:deviceinfo.institution_id,\n      cat:deviceinfo.category,\n      typeDev:deviceinfo.type,\n      status:deviceinfo.status  }\n  }):[{devId:\"Loading\",\n    instId:\"Loading\",\n    cat:\"Loading\",\n    typeDev:\"Loading\"}];\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader className={classes.table} aria-label=\"custom pagination table\">\n      <TableHead>\n          <TableRow>\n            <TableCell align='left'>Device Id</TableCell>\n            <TableCell align='left'>Institution Id</TableCell>\n            <TableCell align='left'>Category</TableCell>\n            <TableCell align='left'>Device Type</TableCell>\n            <TableCell align='left'>Status</TableCell>\n          </TableRow>\n      </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.devId}>\n              <TableCell style={{ width: 160}} align =\"left\">\n                {row.devId}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.instId}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.cat}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.typeDev}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"left\">\n                {row.status}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}","/Users/raj/Desktop/TransactEstate/client/src/actions/types.js",[],"/Users/raj/Desktop/TransactEstate/client/src/components/DeviceInfo.js",[],["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"89","severity":1,"message":"93","line":23,"column":8,"nodeType":"91","messageId":"92","endLine":23,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":13,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":4,"column":1,"nodeType":"96","endLine":13,"endColumn":2},{"ruleId":"89","severity":1,"message":"97","line":1,"column":16,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"98","line":2,"column":9,"nodeType":"91","messageId":"92","endLine":2,"endColumn":16},{"ruleId":"89","severity":1,"message":"99","line":3,"column":9,"nodeType":"91","messageId":"92","endLine":3,"endColumn":19},{"ruleId":"89","severity":1,"message":"100","line":20,"column":10,"nodeType":"91","messageId":"92","endLine":20,"endColumn":21},{"ruleId":"89","severity":1,"message":"101","line":29,"column":7,"nodeType":"91","messageId":"92","endLine":29,"endColumn":13},{"ruleId":"85","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Aboutus' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Component' is defined but never used.","'connect' is defined but never used.","'fetchOnine' is defined but never used.","'useDispatch' is defined but never used.","'propsT' is assigned a value but never used.",["104"],["105"],"no-global-assign","no-unsafe-negation"]